<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    const string ROOT_NAMESPACE = "TehPers.Core.DependencyInjection.Api.Lifecycle";

    var events = new Dictionary<string, List<string>> {
        ["GameLoop"] = new List<string> {
            "DayEnding",
			"OneSecondUpdateTicked",
			"OneSecondUpdateTicking",
			"ReturnedToTitle",
			"DayStarted",
            "SaveCreated",
            "SaveCreating",
            "SaveLoaded",
            "Saved",
            "Saving",
            "TimeChanged",
            "UpdateTicked",
            "UpdateTicking"
        }, 
        ["Display"] = new List<string> {
            "MenuChanged",
            "Rendered",
            "RenderedActiveMenu",
            "RenderedHud",
            "RenderedWorld",
            "Rendering",
            "RenderingActiveMenu",
            "RenderingHud",
            "RenderingWorld",
            "WindowResized"
        }, 
        ["Input"] = new List<string> {
            "ButtonPressed",
            "ButtonReleased",
            "CursorMoved",
            "MouseWheelScrolled"
        }, 
        ["Multiplayer"] = new List<string> {
            "ModMessageReceived",
            "PeerContextReceived",
            "PeerDisconnected"
        }, 
        ["Player"] = new List<string> {
            "InventoryChanged",
            "LevelChanged",
            "Warped"
        }, 
        ["Specialised"] = new List<string> {
            "LoadStageChanged",
            "UnvalidatedUpdateTicked",
            "UnvalidatedUpdateTicking"
        }, 
        ["World"] = new List<string> {
            "BuildingListChanged",
            "DebrisListChanged",
            "LargeTerrainFeatureListChanged",
            "LocationListChanged",
            "NpcListChanged",
            "ObjectListChanged",
            "TerrainFeatureListChanged"
        }
    };
#>
using StardewModdingAPI.Events;

namespace <#= ROOT_NAMESPACE #> {
<#
    foreach (var namespaceKv in events) {
#>

    namespace <#= namespaceKv.Key #> {
<#
        foreach (var eventName in namespaceKv.Value) {
#>

        public interface I<#= eventName #>Handler {
            void On<#= eventName #>(object sender, <#= eventName #>EventArgs args);
        }
<#
        }
#>
    }
<#
    }
#>
}